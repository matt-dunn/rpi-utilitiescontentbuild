<?xml version="1.0"?>
<!-- phing build file -->
<project name="buildphar" basedir="." default="main">
    <property name="source" value="${project.basedir}/Src/" override="true" />
    
    <target name="clean">
        <delete file="bin/contentbuild" failonerror="false"/>
        <delete file="bin/contentbuild.phar" failonerror="false"/>
        <delete dir="${project.basedir}/build" failonerror="false"/>
        <mkdir dir="${project.basedir}/build/logs"/>
    </target>
    
    <target name="prebuildTasks">
        <phingcall target="composer"/>
        <phingcall target="checkCodeTasks"/>
    </target>
    
    <target name="checkCodeTasks">
        <phingcall target="pdepend"/>
        <!--<phingcall target="phpmd"/>-->
        <!--<phingcall target="phpcpd"/>-->
        <phingcall target="phpcs"/>
        <phingcall target="phploc"/>
        <phingcall target="phpunit"/>
        <!--<phingcall target="phpdoc"/>-->
        <!--<phingcall target="phpcb"/>-->
    </target>

    <target name="composer">
        <exec dir="." executable="composer" checkReturn="true" logOutput="true">
            <arg line="update"/>
            <arg line="-n"/>
        </exec>
    </target>
    
    <target name="phpunit">
        <exec dir="." executable="php" checkReturn="true" logOutput="true">
            <arg line="vendor/phpunit/phpunit/phpunit.php --configuration Test/phpunit.xml Test"/>
        </exec>
    </target>
    
    <target name="pdepend">
        <exec executable="vendor/bin/pdepend" checkReturn="true" logOutput="true">
            <arg value="--jdepend-xml=build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=build/pdepend/overview-pyramid.svg" />
            <arg path="${source}" />
        </exec>
    </target>

    <target name="phpmd">
        <exec executable="vendor/bin/phpmd" checkReturn="true" logOutput="true">
            <arg path="${source}" />
            <arg value="xml" />
            <arg value="${project.basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${project.basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcpd">
        <exec executable="vendor/bin/phpcpd" checkReturn="true" logOutput="true">
            <arg value="--log-pmd" />
            <arg value="${project.basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${source}" />
        </exec>
    </target>

    <target name="phploc">
        <exec executable="vendor/bin/phploc" checkReturn="true" logOutput="true">
            <arg value="--log-csv" />
            <arg value="${project.basedir}/build/logs/phploc.csv" />
            <arg path="${source}" />
        </exec>
    </target>

    <target name="phpcs">
        <exec executable="vendor/bin/phpcs" checkReturn="true" logOutput="true">
            <arg value="-v" />
            <arg value="--report=checkstyle" />
            <arg value="--report-file=build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php,inc" />
            <arg value="--ignore=*/.cache/*,*/__*,*/composer/*"/>
            <arg path="${source}"/>
            <arg path="${project.basedir}/Test" />
        </exec>
    </target>
    
    <target name="phpcb">
        <exec executable="vendor/bin/phpcb" checkReturn="true" logOutput="true">
            <arg value="--log" />
            <arg path="build/logs" />
            <arg value="--source" />
            <arg path="${source}" />
            <arg value="--output" />
            <arg path="${project.basedir}/build/code-browser" />
        </exec>
    </target>
    
    <target name="createphar">
        <echo file="build/pharBuildFiles">
            <fileset dir="${project.basedir}" id="sourceFiles">
                <include name="Src/**" />
                <include name="vendor/autoload.php" />
                <include name="vendor/composer/**" />
                
                <include name="vendor/rpi/console/**" />
                <include name="vendor/rpi/foundation/**" />
                <include name="vendor/rpi/schemas/Src/RPI/Schemas/Conf/Common/**" />
                
                
                <include name="vendor/leafo/lessphp/lessc.inc.php" />
                <include name="vendor/leafo/lessphp/lessify.inc.php" />
                <include name="vendor/leafo/scssphp/scss.inc.php" />
                <include name="vendor/psr/log/Psr/Log/**" />
                <include name="vendor/ulrichsg/getopt-php/src/**" />
                <include name="vendor/yui/yuicompressor/build/yuicompressor-2.4.7.jar" />
                
                <exclude name="**/Test/**"/>
                <exclude name="**/Test.php"/>
                <exclude name="**/build.xml"/>
                <exclude name="**/composer.*"/>
            </fileset>
        </echo>
        
        <php expression="date('Ymd')" returnProperty="builddate" />
        <pharpackage
            compression="gzip"
            destfile="bin/contentbuild.phar"
            stub="Src/RPI/Utilities/ContentBuild/Stub.php"
            alias="contentbuild.phar"
            basedir=".">
            
            <fileset refid="sourceFiles"/>
            
            <metadata>
                <element name="builddate" value="${builddate}" />
                <element name="authors">
                    <element name="Matt Dunn">
                        <element name="e-mail" value="matt@red-pixel.co.uk" />
                    </element>
                </element>
            </metadata>
        </pharpackage>
    </target>
    
    <target name="install">
        <move file="bin/contentbuild.phar" tofile="bin/contentbuild" overwrite="true"/>
        <exec command="chmod +x bin/contentbuild" />
        <copy file="bin/contentbuild" tofile="/usr/local/bin/contentbuild" overwrite="true" />
    </target>
    
    <target name="main"  depends="clean,prebuildTasks,createphar,install"/>
</project>
